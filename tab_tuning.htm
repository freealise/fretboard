<!DOCTYPE html>
<html>
<head>
<title>Display guitar tabs in simple tuning</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
<style>
@font-face {
  font-family: "DejaVu";
  src: url("/vocalise/fonts/dejavu/DejaVuSansMono.ttf") format("truetype");
}
@font-face {
  font-family: "DejaVuBold";
  src: url("/vocalise/fonts/dejavu/DejaVuSansMono-Bold.ttf") format("truetype");
}
body {
  margin:0;
  overflow-x:hidden;
  background-color:#000000;
}
* {
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  font-family: 'DejaVu', monospace;
  line-height:1em;
  color:#ffffff;
}
input, textarea {
  background-color:#000000;
}
input {
  margin: 0 4px 0 0;
  filter: grayscale(1);
}
#tab {
  letter-spacing: 0px;
  white-space: nowrap;
  resize: none;
}
#tab, #out, #hl {
  margin:0;
  width:99%;
  height:8em;
  overflow:scroll;
  font-size:16px;
  user-select:none;
  clear: both;
  background-color:black;
}
#hl a {
  color:transparent;
  border-left:1px solid gray;
  display: inline-block;
  width:0;
}
#hl {
  position:absolute;
  left:-1.2em;
  bottom:0;
}
#toolbar {
  overflow:hidden;
  margin:0.25em 0.5em;
  white-space:pre;
  font-size:16px;
  height:1.25em;
  float:left;
}
#toolbar a {
  text-decoration:none;
  font-weight:bold;
}
#position {
  height:20px;
  font-weight:bold;
  background-color:black;
  border:none;
  margin:0;
  padding:0;
}
#chord {
  width:64px;
  height:16px;
  font-weight:bold;
  background-color:transparent;
  border:1px solid darkgray;
  margin:0;
  padding:0;
  text-align:center;
}
.h {
  font-weight: bold;
  background-color:#404040;
}
.note {
  display: inline-block;
  position: relative;
  top:3.2px;
}
.piano {
  width:0;
}
.note u {
  text-decoration:none;
}
sub {
  line-height:0;
  letter-spacing:-1em;
}
sup {
  font-size:inherit;
  position:relative;
  bottom:3.2px;
  vertical-align:middle;
  line-height:0;
}
#notation {
  background-color:black;
  position:absolute;
  bottom:0.75em;
  left:1em;
  padding-top:4px;
  white-space: pre;
}
#notation a {
  font-weight:bold;
  text-decoration:none;
}
</style>
</head>
<body oncontextmenu="return false;" onload="if(window.self!==window.top){switchFretboard(false);showNotes();}">
<div id="toolbar"><a id="printLink" title="Save" href="#" onclick="if(printMode===false){printMode=true;}else{printMode=false;}printTab();">🖫</a> | <label for="numbers">1</label><input title="Numbers" id="numbers" type="radio" name="mode" onclick="tuningMode(null);" checked/><label for="letters">a</label><input title="Letters" id="letters" type="radio" name="mode" onclick="tuningMode(false);"/><label for="piano">♩</label><input title="Piano" id="piano" type="radio" name="mode" onclick="tuningMode(true);"/>| <a href="#" title="Show original" onclick="showTab();">🗈</a> <a href="#" title="Show map" onclick="showFretboard();">⩩</a> <a href="#" title="Show notes" onclick="showNotes();">♫</a> <select title="Chord position" id="position" onchange="makeChord();"></select><input type="text" id="chord" onfocus="ctl=this;"/> <a href="#" title="Copy chord" onclick="copyChord();">⧉</a></div>
<textarea id="tab" onchange="changeTuning();" onkeypress="editTab(event);changeTuning();" onfocus="ctl=this;">
  
e|-------------------------------|-------------------------------|
B|-------------------------------|-------------------------------|
G|----4---464---4-----4---464---4|--------------------6---686---6|
D|--6---6-----6-----6---6-----6--|----4---464---4---8---8-----8--|
A|6---------------7--------------|--6---6-----6---9--------------|
E|-------------------------------|7------------------------------|

e|-------------------------------|-------------------------------|
B|-------------------------------|-------------------------------|
G|----4---464---4-----4---464---4|--------------------6---686---6|
D|--6---6-----6-----6---6-----6--|----4---464---4---8---8-----8--|
A|6---------------7--------------|--6---6-----6---9--------------|
E|-------------------------------|7------------------------------|

</textarea>
<pre id="out" onclick='clearHl();'></pre>
<pre id="hl"></pre>
<div id="notation"></div>

<script>
var chord = document.getElementById("chord");
var position = document.getElementById("position");
var printLink = document.getElementById("printLink");
var toolbar = document.getElementById("toolbar");
var tab = document.getElementById("tab");
var out = document.getElementById("out");
var hl = document.getElementById("hl");
var notation = document.getElementById("notation");
var ctl = chord;
var piano = null;
var printMode = false;

var audioCtx = null;
var oscillator = [];
var gainNode = [];

var freq = [329.6276, 246.9417, 195.9977, 146.8324, 110.0000, 82.40689];

function setup() {
  audioCtx = new (window.AudioContext || window.webkitAudioContext)({latencyHint:"interactive",sampleRate: 8000});
  for (var i=0; i<6; i++) {
    oscillator[i] = audioCtx.createOscillator();
    gainNode[i] = audioCtx.createGain();
    gainNode[i].gain.setValueAtTime(0, audioCtx.currentTime);
    oscillator[i].type = 'sine';
    oscillator[i].frequency.setValueAtTime(110, audioCtx.currentTime); // value in hertz
    oscillator[i].connect(gainNode[i]);
    gainNode[i].connect(audioCtx.destination);
    oscillator[i].start();
  }
}

function play(t) {
  if (!audioCtx) {
    setup();
  }
  var t_ = parseBinary(t);
  var s = t_[0];
  var f = t_[1];
  oscillator[s].frequency.setValueAtTime(freq[s]*Math.pow(Math.pow(2,1/12), f), audioCtx.currentTime);
  gainNode[s].gain.setValueAtTime(0.25, audioCtx.currentTime+0.001);
}

function stop(t) {
  var t_ = parseBinary(t);
  var s = t_[0];
  gainNode[s].gain.setValueAtTime(0, audioCtx.currentTime+0.001);
}

function stopAll() {
  for (var i=0; i<6; i++) {
    gainNode[i].gain.setValueAtTime(0, audioCtx.currentTime+0.001);
  }
}

var tone = ("꜍꜎꜏꜐꜑").split("");
var barre = ("꜒꜓꜔꜕꜖˥˦˧˨˩").split("");

var octave = [ '꜌', '꜋', '꜊', '꜉', '꜈', 'ᣟ𝍩', '꜑', '꜐', '꜏', '꜎', '꜍', '𝍩ᣟ' ]; //ᐧ ⸽
var octave_ = new RegExp("("+octave.join("|")+")", 'g');
var colors = [0,1,0,1,0,0,1,0,1,0,1,0,0];

for (var i=0; i<octave.length; i++) {
  notation.innerHTML += "<a title='"+octave[i]+"' href='javascript:' onclick='addNote(this.title);' style='color:rgba(255,255,255,"+(colors[i]*0.5+0.5)+");'>"+octave[i]+"</a> ";
}
notation.innerHTML += " &nbsp; ";
for (var i=0; i<barre.length; i++) {
  notation.innerHTML += "<a title='"+barre[i]+"' href='javascript:' onclick='addNote(this.title);' style='color:rgba(255,255,255,0.5);'>"+barre[i]+"</a> ";
}

var num = ("𝟶 𝟷 𝟸 𝟹 𝟺 𝟻 𝟼 𝟽 𝟾 𝟿 𝟷𝟶 𝟷𝟷 𝟷𝟸 𝟷𝟹 𝟷𝟺 𝟷𝟻 𝟷𝟼 𝟷𝟽 𝟷𝟾 𝟷𝟿 𝟸𝟶 𝟸𝟷 𝟸𝟸 𝟸𝟹 𝟸𝟺").split(" ");

var letters = ('a a_ b c c_ d d_ e f f_ g g_').split(' ');
for (var i=0; i<12; i++) {
  document.getElementsByTagName("style")[0].innerText += "." + letters[i] + " {color:hsl(" + (30*i) + ",100%,67%);} ";
}

var tuning = (
"5 ꜐ c   ꜐ c# ꜐ d  ꜐ d# ꜏ e  ꜏ f  ꜏ f# ꜏ g  ꜏ g# ꜏ a  ꜏ a# ꜏ b  ꜏ c  |\n" +
"4 ꜐ g#  ꜐ a  ꜐ a# ꜐ b  ꜐ c  ꜐ c# ꜐ d  ꜐ d# ꜏ e  ꜏ f  ꜏ f# ꜏ g  ꜏ g# |\n" +
"3 ꜐ e   ꜐ f  ꜐ f# ꜐ g  ꜐ g# ꜐ a  ꜐ a# ꜐ b  ꜐ c  ꜐ c# ꜐ d  ꜐ d# ꜏ e  |\n" +
"2 ꜑ C   ꜑ C# ꜑ D  ꜑ D# ꜐ e  ꜐ f  ꜐ f# ꜐ g  ꜐ g# ꜐ a  ꜐ a# ꜐ b  ꜐ c  |\n" +
"1 ꜑ G#  ꜑ A  ꜑ A# ꜑ B  ꜑ C  ꜑ C# ꜑ D  ꜑ D# ꜐ e  ꜐ f  ꜐ f# ꜐ g  ꜐ g# |\n" +
"0 ꜑ E   ꜑ F  ꜑ F# ꜑ G  ꜑ G# ꜑ A  ꜑ A# ꜑ B  ꜑ C  ꜑ C# ꜑ D  ꜑ D# ꜐ e  |\n"
).replace(octave_, function(x) {return "<a>"+x+"</a>";} );

var map = [
['꜏ E', '꜏ F', '꜏ F#', '꜏ G', '꜏ G#', '꜏ A', '꜏ A#', '꜏ B', '꜏ C', '꜏ C#', '꜏ D', '꜏ D#', '꜎ E', '꜎ F', '꜎ F#', '꜎ G', '꜎ G#', '꜎ A', '꜎ A#', '꜎ B', '꜎ C', '꜎ C#', '꜎ D', '꜎ D#', '꜍ E'],
['꜐ B', '꜐ C', '꜐ C#', '꜐ D', '꜐ D#', '꜏ E', '꜏ F', '꜏ F#', '꜏ G', '꜏ G#', '꜏ A', '꜏ A#', '꜏ B', '꜏ C', '꜏ C#', '꜏ D', '꜏ D#', '꜎ E', '꜎ F', '꜎ F#', '꜎ G', '꜎ G#', '꜎ A', '꜎ A#', '꜎ B'],
['꜐ G', '꜐ G#', '꜐ A', '꜐ A#', '꜐ B', '꜐ C', '꜐ C#', '꜐ D', '꜐ D#', '꜏ E', '꜏ F', '꜏ F#', '꜏ G', '꜏ G#', '꜏ A', '꜏ A#', '꜏ B', '꜏ C', '꜏ C#', '꜏ D', '꜏ D#', '꜎ E', '꜎ F', '꜎ F#', '꜎ G'],
['꜑ D', '꜑ D#', '꜐ E', '꜐ F', '꜐ F#', '꜐ G', '꜐ G#', '꜐ A', '꜐ A#', '꜐ B', '꜐ C', '꜐ C#', '꜐ D', '꜐ D#', '꜏ E', '꜏ F', '꜏ F#', '꜏ G', '꜏ G#', '꜏ A', '꜏ A#', '꜏ B', '꜏ C', '꜏ C#', '꜏ D'],
['꜑ A', '꜑ A#', '꜑ B', '꜑ C', '꜑ C#', '꜑ D', '꜑ D#', '꜐ E', '꜐ F', '꜐ F#', '꜐ G', '꜐ G#', '꜐ A', '꜐ A#', '꜐ B', '꜐ C', '꜐ C#', '꜐ D', '꜐ D#', '꜏ E', '꜏ F', '꜏ F#', '꜏ G', '꜏ G#', '꜏ A'],
['꜑ E', '꜑ F', '꜑ F#', '꜑ G', '꜑ G#', '꜑ A', '꜑ A#', '꜑ B', '꜑ C', '꜑ C#', '꜑ D', '꜑ D#', '꜐ E', '꜐ F', '꜐ F#', '꜐ G', '꜐ G#', '꜐ A', '꜐ A#', '꜐ B', '꜐ C', '꜐ C#', '꜐ D', '꜐ D#', '꜏ E'],
];

for (var i=0; i<5; i++) {
  for (var j=0; j<4; j++) {
    position.innerHTML += "<option>" + barre[i] + " " + barre[5+j] + "</option>";
  }
}

function changeTuning() {
  tab.value = tab.value.replace(/-/g, "—");
  var old = tab.value.trim().split("\n\n");
  var n = [];
  var o = "";
  for (var i=0; i<old.length; i++) {
  	n[i] = old[i].split("|\n");
    for (var j=0; j<6; j++) {
      for (var k=map[0].length-1; k>=0; k--) {
        var k_ = k;
        if (k>=10) {var s = "—";} else {var s = "";}
        var id_ = (j.toString(2)+","+k.toString(2)).replace(/0/g, "o").replace(/1/g, "l");
        var r = new RegExp(k_, 'g');
        if (piano === false) {
          if (map[j][k].length > 3) {
            var note = "<i class='"+map[j][k].slice(2).replace("#","_")+"'>" + map[j][k].slice(2,3) + "</i>";
          } else {
            var note = "<b class='"+map[j][k].slice(2)+"'>" + map[j][k].slice(2,3) + "</b>";
          }
    	    n[i][j] = n[i][j].replace(r, s+"<span class='note' onfocus='highlight(this.title);play(this.id);' onmouseover='highlight(this.title);play(this.id);' ontouchstart='highlight(this.title);play(this.id);' onblur='stop(this.id);' onmouseout='stop(this.id);' ontouchend='stop(this.id);' ontouchcancel='stop(this.id);' id='"+id_+"' title='"+map[j][k]+"'>"+note.toLowerCase()+"</span>");
        } else if (piano === true) {
          if (j>1) {
            var _k = k+1;
          } else {
            var _k = k;
            if (j==0) {
              n[i][j] = "f" + n[i][j].slice(1);
            } else if (j==1) {
              n[i][j] = "c" + n[i][j].slice(1);
            }
          }
          var fret = "<b class='"+map[j][k].slice(2).replace("#","_").toLowerCase()+"'>·</b>";
          for (var p=0; p<_k; p++) {
            fret = "<sup>"+fret+"</sup>";
          }
          s += "—";
          n[i][j] = n[i][j].replace(r, "<span class='note piano' onfocus='highlight(this.title);play(this.id);' onmouseover='highlight(this.title);play(this.id);' ontouchstart='highlight(this.title);play(this.id);' onblur='stop(this.id);' onmouseout='stop(this.id);' ontouchend='stop(this.id);' ontouchcancel='stop(this.id);' id='"+id_+"' title='"+map[j][k]+"'>"+fret+"</span>"+s);
        } else if (piano === null) {
          var fret = "<u class='"+map[j][k].slice(2).replace("#","_").toLowerCase()+"'>"+num[k]+"</u>";
          n[i][j] = n[i][j].replace(r, function(x){ return "<span class='note' onfocus='highlight(this.title);play(this.id);' onmouseover='highlight(this.title);play(this.id);' ontouchstart='highlight(this.title);play(this.id);' onblur='stop(this.id);' onmouseout='stop(this.id);' ontouchend='stop(this.id);' ontouchcancel='stop(this.id);' id='"+id_+"' title='"+map[j][k]+"'>"+fret+"</span>"; });
        }
      }
    }
    o += n[i].join("|\n")+"\n\n";
  }
  out.innerHTML = o;
}

function parseBinary(t) {
  var t_ = t.split(",");
  t_[0] = parseInt(t_[0].replace(/o/g, "0").replace(/l/g, "1"), 2);
  t_[1] = parseInt(t_[1].replace(/o/g, "0").replace(/l/g, "1"), 2);
  return t_;
}

function highlight(t) {
  var r = new RegExp('<a>'+t.slice(0,1)+'</a>'+t.slice(1)+' +', 'gi');
  hl.innerHTML = hl.innerHTML.replace(r, function(x){return "<span class='h "+x.toLowerCase().slice(9,11).trim().replace("#","_")+"'>"+x.toLowerCase().replace(/ /g, "_")+"</span>";});
}

function clearHl() {
  hl.innerHTML = tuning.toLowerCase().replace(/\d/g, function(x){return "<span id='g"+x+"'>";}).replace(/\n/g, "</span>\n");
}
clearHl();

function showFretboard() {
  if (hl.style.display == "none") {
    switchFretboard(true);
  } else {
    switchFretboard(false);
  }
}

function switchFretboard(d) {
  if (d === true) {
    hl.style.display = "block";
  } else if (d === false) {
    hl.style.display = "none";
  }
}

function showTab() {
  if (tab.style.display == "none") {
    tab.style.display = "block";
  } else {
    tab.style.display = "none";
  }
}

function printTab() {
  if (printMode === true) {
    toolbar.style.width = "2em";
    notation.style.display = "none";
    out.style.overflow = "visible";
    tab.style.display = "none";
    switchFretboard(false);
    printLink.innerText = "[x]";
    window.print();
  } else {
    toolbar.style.width = "auto";
    notation.style.display = "auto";
    out.style.overflow = "scroll";
    tab.style.display = "block";
    switchFretboard(true);
    printLink.innerText = "🖫";
  }
}

function copyChord() {
  navigator.clipboard.writeText(chord.value);
}

function makeChord() {
  var cb = hl.innerText.replace(octave_, "").replace(/\|/g, "").replace(/_[abcdefg]/g, "__").replace(/[#_]_/g, "__").replace(/[abcdefg# ]/g, " ");
  cb = cb.slice(2,-1).replace(/\n../g, "\n").replace(/____/g, "0").replace(/    /g, "-");
  var cb = cb.split("\n");
  var chord_ = [];
  var p = position.options.selectedIndex;
  for (var i=0; i<cb.length; i++) {
    chord_[i] = "꜒";
    for (var j=0; j<cb[i].length; j++) {
      if (cb[i].charAt(j) == "0" && tone[j-p]) {
        chord_[i] = tone[j-p];
        break;
      }
    }
  }
  chord.value = chord_.reverse().join("");
}

function editTab(e) {
  if (e.key.length == 1 && !e.ctrlKey && !e.altKey && !e.metaKey) {
    e.preventDefault();
    var b = tab.selectionStart;
    var d = tab.selectionEnd;
    tab.value = tab.value.substr(0,b) + e.key + tab.value.substr(d+1);
    tab.setSelectionRange(b+1, d+1);
  }
}

function addNote(nt) {
  var b = ctl.selectionStart;
  var d = ctl.selectionEnd;
  ctl.value = ctl.value.substr(0,b) + nt + ctl.value.substr(d);
  ctl.setSelectionRange(b+nt.length, d+nt.length);
  ctl.focus();
}

function tuningMode(m) {
  piano = m;
  changeTuning();
  tab.style.display = "none";
}

function showNotes() {
  if (notation.style.display == "none") {
    notation.style.display = "block";
  } else {
    notation.style.display = "none";
  }
}

</script>
</body>
</html>
